# Generated by Django 5.2.5 on 2025-08-13 16:02

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(choices=[('laptop', 'Laptop'), ('desktop', 'Desktop'), ('printer', 'Printer')], max_length=20)),
                ('brand', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('problem_description', models.TextField()),
                ('accessories_received', models.TextField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('actual_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('received_date', models.DateTimeField(auto_now_add=True)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('delivered_date', models.DateTimeField(blank=True, null=True)),
                ('technician_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_items', to='services.customer')),
            ],
            options={
                'ordering': ['-received_date'],
            },
        ),
        migrations.CreateModel(
            name='ServiceInward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inward_number', models.CharField(max_length=20, unique=True)),
                ('received_by', models.CharField(max_length=100)),
                ('condition_on_receipt', models.TextField()),
                ('estimated_delivery_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('service_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inward_entry', to='services.serviceitem')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('service_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='services.serviceitem')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ServiceLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('inward', 'Service Inward'), ('progress', 'Work Progress'), ('completion', 'Service Completion'), ('delivery', 'Service Delivery'), ('payment', 'Payment')], max_length=20)),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.CharField(default='System', max_length=100)),
                ('service_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ledger_entries', to='services.serviceitem')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
    ]
